# Default configuration options
# Overriden by options set in config.ini (untracked by git, does not need to exist)
# These options should be set in the same [DEFAULT] section.

[DEFAULT]
# Logging configuration

# Levels as set by Python
# The value may either be one of these integers, or one of these strings:
#   CRITICAL = 50
#   ERROR    = 40
#   WARNING  = 30
#   INFO     = 20
#   DEBUG    = 10
#
# Log entries at or above the set level are emitted (both to disk and to the console, if enabled)
# Log entries below the set level are ignored
level = INFO

# Logging format
# See https://docs.python.org/3/library/logging.html#logging.Formatter for documentation
# The default format appears like:
# [2018-07-28 21:29:24,180] INFO Accepting a new connection.
format = [%(asctime)s] %(levelname)s %(message)s

# These two options control logging to either the console or the disk
# At least one must be enabled to emit logs.
# If both are disabled, then the used logger will be configured so that no log entry can be emitted,
#   and logs will be configured to be sent to stdout.
to_console = on
to_disk = on

# If to_console is enabled, this option sets the stream to which logging is written.
# Can either be 'stdout' or 'stderr'
stream = stderr


# If to_disk is enabled, these options set the location to which logs are written
# Logs are written to a rotating file: The configured file is current.
# Once daily, the log file has the date appended to it (as an extension), and the configured file is emptied
# Old logs are kept for 30 days.

# Directory is relative to the directory in which server.py is kept.
# A word of caution: The default directory is ignored by git. Other directories may not be.
# Be careful to avoid tracking logs in git.
directory = logs

# File is the name of the current log within the configured directory.
file = server

# This parameter provides the name of the logger used by the server.
# I've never noticed any change caused by changing it, but perhaps if you want to include it in the format string or something, this could come in handy.
logger = Cadence Server
